/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import UtilityClasses.StaticVar;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.mysql.cj.xdevapi.Statement;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author clare
 */
public class ViewPassenger extends javax.swing.JFrame {

    /**
     * Creates new form ViewPassenger
     */
    public ViewPassenger() {
        initComponents();
        
        sqlConnect();
        fetch();
        
        if (StaticVar.privilege.equals("Admin") || StaticVar.privilege.equals("Manager")) {
            deleteRecordBtn.setEnabled(true);
        }
        
        setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\clare\\Documents\\Programming\\JavaNetbeans\\LakbayTicketManagementSystem\\LakbayTicketManagementSystem\\LakbayTicketManagementSystem\\LakbayTicketManagementSystem\\src\\Images\\Icons\\bus_window_icon_64x64.png"));
        
    }
    
    // Connect database code
    Connection con;
    PreparedStatement ps;
    ResultSet rs;
    Statement st;
    
    public void sqlConnect()
    {
        
        try {
           String url1 = "jdbc:mysql://localhost:3306/lakbay_ticket_management_system";
           String user = "root";
           String password = "Cj06032002";
           
           con = DriverManager.getConnection(url1, user, password);
           if(con != null)
           {
               // System.out.println("Connected to the database.");
           }
           
        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        ovrvwTxt2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        passengerTable = new javax.swing.JTable();
        warningTxt = new javax.swing.JLabel();
        deleteRecordBtn = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Passengers");

        rootPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setPreferredSize(new java.awt.Dimension(1280, 70));

        ovrvwTxt2.setFont(new java.awt.Font("Open Sans", 1, 20)); // NOI18N
        ovrvwTxt2.setForeground(new java.awt.Color(255, 159, 28));
        ovrvwTxt2.setText("View Passenger");

        backBtn.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 159, 28));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(490, 490, 490)
                .addComponent(ovrvwTxt2)
                .addContainerGap(537, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ovrvwTxt2)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        passengerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Passenger No.", "First Name", "Middle Name", "Last Name", "Email Address", "Contact Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        passengerTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(passengerTable);
        if (passengerTable.getColumnModel().getColumnCount() > 0) {
            passengerTable.getColumnModel().getColumn(0).setResizable(false);
            passengerTable.getColumnModel().getColumn(1).setResizable(false);
            passengerTable.getColumnModel().getColumn(2).setResizable(false);
            passengerTable.getColumnModel().getColumn(3).setResizable(false);
            passengerTable.getColumnModel().getColumn(4).setResizable(false);
            passengerTable.getColumnModel().getColumn(5).setResizable(false);
        }

        warningTxt.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        warningTxt.setForeground(new java.awt.Color(204, 0, 0));
        warningTxt.setToolTipText("");

        deleteRecordBtn.setBackground(new java.awt.Color(255, 159, 28));
        deleteRecordBtn.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        deleteRecordBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteRecordBtn.setText("Delete Selected");
        deleteRecordBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 159, 28), 1, true));
        deleteRecordBtn.setEnabled(false);
        deleteRecordBtn.setPreferredSize(new java.awt.Dimension(104, 39));
        deleteRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecordBtnActionPerformed(evt);
            }
        });

        searchField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        searchField.setToolTipText("");
        searchField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Search:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        searchBtn.setBackground(new java.awt.Color(255, 159, 28));
        searchBtn.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search");
        searchBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 159, 28), 1, true));
        searchBtn.setPreferredSize(new java.awt.Dimension(104, 39));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addGap(403, 403, 403)
                        .addComponent(warningTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rootPanelLayout.createSequentialGroup()
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteRecordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteRecordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningTxt)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //REGION - Local Methods
    
    public void fetch() {

        int columnCount;
        String query = "SELECT passenger_no, first_name, middle_name, last_name, email_address, contact_number FROM passenger";

        try {

            ps = con.prepareStatement(query);
            rs = ps.executeQuery();
            java.sql.ResultSetMetaData rss = rs.getMetaData();
            columnCount = rss.getColumnCount();

            String[] cols = new String[columnCount];
            for (int i = 1; i <= columnCount; i++) {
                cols[i - 1] = rss.getColumnName(i);
            }

            //DefaultTableModel df = (DefaultTableModel)ticketTable.getModel();
            DefaultTableModel df = new DefaultTableModel(cols, 0);

            while (rs.next()) {
                Object[] row = new Object[columnCount];
                for (int i = 1; i <= columnCount; i++) {
                    row[i - 1] = rs.getObject(i);
                }
                df.addRow(row);
            }

            passengerTable.setModel(df);

        } catch (Exception e) {

        }
    }
    
    
    public void fetch(String s) {

        int columnCount;
        String query = "SELECT passenger_no, first_name, middle_name, last_name, email_address, contact_number FROM passenger "
                + "WHERE passenger_no = ?";

        try {

            ps = con.prepareStatement(query);
            ps.setString(1, s);
            rs = ps.executeQuery();
            java.sql.ResultSetMetaData rss = rs.getMetaData();
            columnCount = rss.getColumnCount();

            String[] cols = new String[columnCount];
            for (int i = 1; i <= columnCount; i++) {
                cols[i - 1] = rss.getColumnName(i);
            }

            //DefaultTableModel df = (DefaultTableModel)ticketTable.getModel();
            DefaultTableModel df = new DefaultTableModel(cols, 0);

            while (rs.next()) {
                Object[] row = new Object[columnCount];
                for (int i = 1; i <= columnCount; i++) {
                    row[i - 1] = rs.getObject(i);
                }
                df.addRow(row);
            }

            passengerTable.setModel(df);

        } catch (Exception e) {

        }
    }
    
    
    public void deleteRecord(String d) {

        String query = "DELETE FROM passenger WHERE passenger_no = ?";

        try {
            ps = con.prepareStatement(query);
            ps.setString(1, d);

            int k = ps.executeUpdate();

            if (k == 1) {
                JOptionPane.showMessageDialog(rootPane, d + " has been deleted from the record.", "Delete Success", JOptionPane.OK_OPTION);
            }

        } catch (SQLException ex) {
            //Logger.getLogger(ViewStaff.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(this, "Record can't be deleted due to Integrity Constraint.");
            
        }
    }
    
    
    //ENDREGION
    
    
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        HomePage hp = new HomePage();
        hp.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_backBtnActionPerformed

    private void deleteRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecordBtnActionPerformed
        
        int column = 0;
        int row = passengerTable.getSelectedRow();
        String val = passengerTable.getModel().getValueAt(row, column).toString();
        
        System.out.println(val);
        
        Object[] options = { "CONFIRM", "CANCEL" };
        int choice = JOptionPane.showOptionDialog(null, "You are deleting: " + val, "Warning",
            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
            null, options, options[0]);
        
        if(choice == 0)
        {
            deleteRecord(val);
            fetch();
        }

    }//GEN-LAST:event_deleteRecordBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        
        if (searchField.getText().equals("")) {
            fetch();
        }
        else
        {
            fetch(searchField.getText());
        }
        
    }//GEN-LAST:event_searchBtnActionPerformed

    
    
    
    
    public static void main(String args[]) {
        // region Set the Look and Feel of the Project
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (UnsupportedLookAndFeelException e) {
            
        }
        // endregion
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPassenger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteRecordBtn;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel ovrvwTxt2;
    private javax.swing.JTable passengerTable;
    private javax.swing.JPanel rootPanel;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel warningTxt;
    // End of variables declaration//GEN-END:variables
}
