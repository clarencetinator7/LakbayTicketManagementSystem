/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms;

import UtilityClasses.SQLBasic;
import UtilityClasses.Staff;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import com.mysql.cj.xdevapi.Statement;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author clare
 */
public class AddStaff extends javax.swing.JFrame {

    /**
     * Creates new form AddStaff
     */
    public AddStaff() {
        initComponents();
        sqlConnect();
        Fetch();
        
        
        String currentSelected = positionField.getSelectedItem().toString();
        String countFormated = String.format("%03d", countRec(currentSelected) + 1);
        
        setStaffID("CS");
        
    }
    // Connect database code
    Connection con;
    PreparedStatement ps;
    ResultSet rs;
    Statement st;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        ovrvwTxt2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        passengerDetailsPanel = new javax.swing.JPanel();
        ovrvwTxt = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        firstNameField = new javax.swing.JTextField();
        middleNameField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        contactNoField = new javax.swing.JTextField();
        staffIdField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        addStaffBtn = new javax.swing.JButton();
        clearForm = new javax.swing.JButton();
        accDetailsPanel = new javax.swing.JPanel();
        ovrvwTxt1 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        passField = new javax.swing.JPasswordField();
        conPassField = new javax.swing.JPasswordField();
        passWarningTxt = new javax.swing.JLabel();
        accessOptionPane = new javax.swing.JPanel();
        ovrvwTxt4 = new javax.swing.JLabel();
        positionField = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        warningTxt = new javax.swing.JLabel();
        viewAllBtn = new javax.swing.JButton();
        editSelectedBtn = new javax.swing.JButton();
        conEditBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rootPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setPreferredSize(new java.awt.Dimension(1280, 70));

        ovrvwTxt2.setFont(new java.awt.Font("Open Sans", 1, 20)); // NOI18N
        ovrvwTxt2.setForeground(new java.awt.Color(255, 159, 28));
        ovrvwTxt2.setText("ADD STAFF");

        backBtn.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 159, 28));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 488, Short.MAX_VALUE)
                .addComponent(ovrvwTxt2)
                .addGap(584, 584, 584))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ovrvwTxt2)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        passengerDetailsPanel.setBackground(new java.awt.Color(255, 255, 255));
        passengerDetailsPanel.setPreferredSize(new java.awt.Dimension(373, 620));

        ovrvwTxt.setFont(new java.awt.Font("Open Sans", 1, 20)); // NOI18N
        ovrvwTxt.setForeground(new java.awt.Color(255, 159, 28));
        ovrvwTxt.setText("Staff Details");

        lastNameField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        lastNameField.setToolTipText("HELLO");
        lastNameField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Last Name:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        firstNameField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        firstNameField.setToolTipText("HELLO");
        firstNameField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "First Name:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        firstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameFieldActionPerformed(evt);
            }
        });

        middleNameField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        middleNameField.setToolTipText("HELLO");
        middleNameField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Middle Name (Optional)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        middleNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                middleNameFieldActionPerformed(evt);
            }
        });

        emailField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        emailField.setToolTipText("HELLO");
        emailField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Email:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        contactNoField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        contactNoField.setToolTipText("HELLO");
        contactNoField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Contact No.:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        contactNoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactNoFieldKeyTyped(evt);
            }
        });

        staffIdField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        staffIdField.setToolTipText("HELLO");
        staffIdField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Staff ID:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        staffIdField.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Open Sans", 2, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Staff ID is Auto Generated");

        javax.swing.GroupLayout passengerDetailsPanelLayout = new javax.swing.GroupLayout(passengerDetailsPanel);
        passengerDetailsPanel.setLayout(passengerDetailsPanelLayout);
        passengerDetailsPanelLayout.setHorizontalGroup(
            passengerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(passengerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(staffIdField)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, passengerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(firstNameField)
                        .addContainerGap())
                    .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(emailField)
                        .addContainerGap())
                    .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(contactNoField)
                        .addContainerGap())
                    .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(lastNameField)
                        .addContainerGap())
                    .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(middleNameField)
                        .addContainerGap())))
            .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                .addGroup(passengerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(ovrvwTxt))
                    .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        passengerDetailsPanelLayout.setVerticalGroup(
            passengerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passengerDetailsPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(ovrvwTxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(staffIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(middleNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(contactNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        addStaffBtn.setBackground(new java.awt.Color(255, 159, 28));
        addStaffBtn.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        addStaffBtn.setForeground(new java.awt.Color(255, 255, 255));
        addStaffBtn.setText("Add");
        addStaffBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 159, 28), 1, true));
        addStaffBtn.setPreferredSize(new java.awt.Dimension(104, 39));
        addStaffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStaffBtnActionPerformed(evt);
            }
        });

        clearForm.setBackground(new java.awt.Color(242, 242, 242));
        clearForm.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        clearForm.setForeground(new java.awt.Color(28, 162, 150));
        clearForm.setText("Clear");
        clearForm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(28, 162, 150), 2, true));
        clearForm.setPreferredSize(new java.awt.Dimension(104, 39));
        clearForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFormActionPerformed(evt);
            }
        });

        accDetailsPanel.setBackground(new java.awt.Color(255, 255, 255));
        accDetailsPanel.setPreferredSize(new java.awt.Dimension(373, 100));

        ovrvwTxt1.setFont(new java.awt.Font("Open Sans", 1, 20)); // NOI18N
        ovrvwTxt1.setForeground(new java.awt.Color(255, 159, 28));
        ovrvwTxt1.setText("Account Details");

        userName.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        userName.setToolTipText("HELLO");
        userName.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Username:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N
        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });

        passField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        passField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Password:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        conPassField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        conPassField.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true), "Confirm Password:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans", 0, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        passWarningTxt.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        passWarningTxt.setForeground(new java.awt.Color(204, 0, 0));
        passWarningTxt.setToolTipText("");

        javax.swing.GroupLayout accDetailsPanelLayout = new javax.swing.GroupLayout(accDetailsPanel);
        accDetailsPanel.setLayout(accDetailsPanelLayout);
        accDetailsPanelLayout.setHorizontalGroup(
            accDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userName)
                    .addGroup(accDetailsPanelLayout.createSequentialGroup()
                        .addComponent(ovrvwTxt1)
                        .addGap(0, 207, Short.MAX_VALUE))
                    .addComponent(passField)
                    .addComponent(conPassField)
                    .addComponent(passWarningTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE))
                .addContainerGap())
        );
        accDetailsPanelLayout.setVerticalGroup(
            accDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accDetailsPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ovrvwTxt1)
                .addGap(22, 22, 22)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(conPassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(passWarningTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        accessOptionPane.setBackground(new java.awt.Color(255, 255, 255));
        accessOptionPane.setPreferredSize(new java.awt.Dimension(373, 100));

        ovrvwTxt4.setFont(new java.awt.Font("Open Sans", 1, 20)); // NOI18N
        ovrvwTxt4.setForeground(new java.awt.Color(255, 159, 28));
        ovrvwTxt4.setText("Access / Position");

        positionField.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        positionField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cashier", "Manager", "Admin" }));
        positionField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        positionField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                positionFieldItemStateChanged(evt);
            }
        });
        positionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionFieldActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Position");

        javax.swing.GroupLayout accessOptionPaneLayout = new javax.swing.GroupLayout(accessOptionPane);
        accessOptionPane.setLayout(accessOptionPaneLayout);
        accessOptionPaneLayout.setHorizontalGroup(
            accessOptionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessOptionPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accessOptionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(positionField, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(accessOptionPaneLayout.createSequentialGroup()
                        .addGroup(accessOptionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ovrvwTxt4)
                            .addComponent(jLabel10))
                        .addGap(0, 208, Short.MAX_VALUE)))
                .addContainerGap())
        );
        accessOptionPaneLayout.setVerticalGroup(
            accessOptionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessOptionPaneLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ovrvwTxt4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(positionField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Staff ID", "Name", "Privilege"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        warningTxt.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        warningTxt.setForeground(new java.awt.Color(204, 0, 0));
        warningTxt.setToolTipText("");

        viewAllBtn.setBackground(new java.awt.Color(255, 159, 28));
        viewAllBtn.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        viewAllBtn.setForeground(new java.awt.Color(255, 255, 255));
        viewAllBtn.setText("View All");
        viewAllBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 159, 28), 1, true));
        viewAllBtn.setPreferredSize(new java.awt.Dimension(104, 39));
        viewAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllBtnActionPerformed(evt);
            }
        });

        editSelectedBtn.setBackground(new java.awt.Color(255, 159, 28));
        editSelectedBtn.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        editSelectedBtn.setForeground(new java.awt.Color(255, 255, 255));
        editSelectedBtn.setText("Edit Selected");
        editSelectedBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 159, 28), 1, true));
        editSelectedBtn.setPreferredSize(new java.awt.Dimension(104, 39));
        editSelectedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSelectedBtnActionPerformed(evt);
            }
        });

        conEditBtn.setBackground(new java.awt.Color(255, 159, 28));
        conEditBtn.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        conEditBtn.setForeground(new java.awt.Color(255, 255, 255));
        conEditBtn.setText("Confirm Edit");
        conEditBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 159, 28), 1, true));
        conEditBtn.setEnabled(false);
        conEditBtn.setPreferredSize(new java.awt.Dimension(104, 39));
        conEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conEditBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passengerDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addComponent(accessOptionPane, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(warningTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(rootPanelLayout.createSequentialGroup()
                            .addComponent(addStaffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(accDetailsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(conEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addComponent(editSelectedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rootPanelLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(viewAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(editSelectedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(rootPanelLayout.createSequentialGroup()
                                .addComponent(accDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addStaffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clearForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(conEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(119, 119, 119)
                                .addComponent(warningTxt))))
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(accessOptionPane, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passengerDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
    static boolean editingMode;
    
    public void sqlConnect()
    {
        
        try {
           String url1 = "jdbc:mysql://localhost:3306/lakbay_ticket_management_system";
           String user = "root";
           String password = "Cj06032002";
           
           con = DriverManager.getConnection(url1, user, password);
           if(con != null)
           {
               System.out.println("Connected to the database.");
           }
           
        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
    }
    
    
    public void close()
    {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    
    // CODE TO DISPLAY DATABASE IN TABLE
    private void Fetch()
    {
        int q;
        String query = "select staff_id, first_name, last_name, privilege"
                + " from staff";
        try {
            ps = con.prepareStatement(query);
            rs = ps.executeQuery();
            java.sql.ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            df.setRowCount(0);
            
            while (rs.next()) {                
                Vector v2 = new Vector();
                for(int a=1; a<=q; a++)
                {
                    v2.add(rs.getString("staff_id"));
                    v2.add(rs.getString("first_name") + " " + rs.getString("last_name"));
                    v2.add(rs.getString("privilege")); 
                }
                df.addRow(v2);
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(AddStaff.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    // CODE TO INSERT STAFF IN DATABASE
    public void insertStaff()
    {
        try {
            Staff sf = new Staff();
             
            sf.setStaffID(staffIdField.getText());
            sf.setfName(firstNameField.getText());
            sf.setmName(middleNameField.getText());
            sf.setlName(lastNameField.getText());
            sf.setPhoneNo(contactNoField.getText());
            sf.setEmail(emailField.getText());
            sf.setUserName(userName.getText());
            sf.setPassWord(String.valueOf(passField.getPassword()));
            sf.setPosition(positionField.getSelectedItem().toString());
        
            
            ps = con.prepareStatement("INSERT INTO staff "
                    + "(staff_id,first_name,middle_name,last_name,email_address,contact_number,user_name,pass_word,privilege) VALUES "
                    + "(?,?,?,?,?,?,?,?,?)");
            ps.setString(1, sf.getStaffID());
            ps.setString(2, sf.getfName());
            ps.setString(3, sf.getmName());
            ps.setString(4, sf.getlName());
            ps.setString(5, sf.getEmail());
            ps.setString(6, sf.getPhoneNo());
            ps.setString(7, sf.getUserName());
            ps.setString(8, sf.getPassWord());
            ps.setString(9, sf.getPosition());
            
            int k = ps.executeUpdate();
            
            if (k == 1) {
                JOptionPane.showMessageDialog(this, "Record Added Successfuly");
                Fetch();
                
            }else
            {
                JOptionPane.showMessageDialog(this, "Record is not added");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(AddStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public boolean isSameId(String id)
    {
        try {
            String query = "SELECT * FROM staff WHERE staff_id = ?";
            
            ps = con.prepareStatement(query);
            ps.setString(1, id);
            
            rs = ps.executeQuery();
            
            while(rs.next())
            {
                String idc = rs.getString("staff_id");
                
                if(idc.equals(id))
                {
                  return true;
                }
                
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(AddDriver.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return false;
    }
    
    public int countRec(String priv)
    {
        String query = "SELECT count(*) FROM staff WHERE privilege = ?";
        
        try {
            ps = con.prepareStatement(query);
            ps.setString(1, priv);
            
            rs = ps.executeQuery();
            
            rs.next();
            return rs.getInt(1);
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(AddStaff.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return 0;
    }
    
    public void setStaffID(String posCode)
    {
        int id = 1;
        String idFormat = String.format("%03d", id);
        String staffId = posCode + "-" + idFormat;
        
        while (isSameId(staffId)) {            
            id++;
            staffId = posCode + "-" + String.format("%03d", id);
        }
        
        staffIdField.setText(staffId);
    }
    
    public boolean isFieldsEmpty()
    {
        if(staffIdField.getText().isEmpty() || firstNameField.getText().isEmpty() || middleNameField.getText().isEmpty() || lastNameField.getText().isEmpty() || contactNoField.getText().isEmpty() || emailField.getText().isEmpty() || 
                userName.getText().isEmpty() || String.valueOf(passField.getPassword()).isEmpty() || String.valueOf(conPassField.getPassword()).isEmpty())
        {
            System.out.println("Incomplete INPUT");
            return true;
        }
        
        return false;
    }
    
    public void clearFields()
    {
        staffIdField.setText("");
        firstNameField.setText("");
        middleNameField.setText("");
        lastNameField.setText("");
        contactNoField.setText("");
        emailField.setText("");
        userName.setText("");
        passField.setText("");
        conPassField.setText("");
        positionField.setSelectedIndex(0);
    }
    
    public void searchInDb(String pk)
    {
        
        sqlConnect();
        String query = "SELECT * FROM staff WHERE staff_id = ?";
        
        try {
            ps = con.prepareStatement(query);
            ps.setString(1, pk);
            
            rs = ps.executeQuery();
            
            while(rs.next())
            {
                staffIdField.setText(rs.getString("staff_id"));
                firstNameField.setText(rs.getString("first_name"));
                middleNameField.setText(rs.getString("middle_name"));
                lastNameField.setText(rs.getString("last_name"));
                contactNoField.setText(rs.getString("contact_number"));
                emailField.setText(rs.getString("email_address"));
                userName.setText(rs.getString("user_name"));
                passField.setText(rs.getString("pass_word"));
                conPassField.setText(rs.getString("pass_word"));
                
                
                if(rs.getString("privilege").contains("CS")){
                    positionField.setSelectedIndex(0);
                } else if(rs.getString("privilege").contains("MG"))
                {
                    positionField.setSelectedIndex(1);
                }else if(rs.getString("privilege").contains("AD"))
                {
                    positionField.setSelectedIndex(2);
                } 
            }
            
            
        } catch (Exception e) {
        }
        
    }
    
    public void updateRecord(String pk)
    {
        sqlConnect();
        
        String query = "UPDATE staff SET "
                + "staff_id = ?, first_name = ?, middle_name = ?, last_name = ?, contact_number = ?, email_address = ?, "
                + "user_name = ?, pass_word = ?, privilege = ? "
                + "WHERE staff_id = ?";
        try {
            ps = con.prepareStatement(query);
            ps.setString(1, staffIdField.getText());
            ps.setString(2, firstNameField.getText());
            ps.setString(3, middleNameField.getText());
            ps.setString(4, lastNameField.getText());
            ps.setString(5, contactNoField.getText());
            ps.setString(6, emailField.getText());
            ps.setString(7, userName.getText());
            ps.setString(8, String.valueOf(passField.getPassword()));
            ps.setString(9, positionField.getSelectedItem().toString());
            ps.setString(10, pk);
            
            int k = ps.executeUpdate();
            
            if(k==1)
            {
                JOptionPane.showMessageDialog(this, "Record Updated Successfuly");
            }
            
        } catch (Exception e) {
        }
        
    }
    
    
    //REGION - BTN Events
     
    private void addStaffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStaffBtnActionPerformed

        warningTxt.setText("");
        passWarningTxt.setText("");
        
        
        // check if the field is empty.
        if (!isFieldsEmpty()) {
            //check if password match the confirm password
            if (String.valueOf(passField.getPassword()).equals(String.valueOf(conPassField.getPassword()))) {
                insertStaff();
                Fetch();
                clearFields(); 
            }
            else{
                passWarningTxt.setText("Password doesn't match.");
            }

        } else if(isFieldsEmpty())
        {
            warningTxt.setText("Make sure to fill all reuqired spaces.");
        }

    }//GEN-LAST:event_addStaffBtnActionPerformed

    private void clearFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFormActionPerformed
        //System.out.println("Numbers of data: " + countRec(positionField.getSelectedItem().toString()));

        
        if (editingMode) {
            editingMode = false;
            conEditBtn.setEnabled(false);
            editSelectedBtn.setEnabled(true);
            addStaffBtn.setEnabled(true);
            positionField.setEnabled(true);
            clearFields();
            warningTxt.setText("");
            passWarningTxt.setText("");
        }
        else
        {
            clearFields(); 
            warningTxt.setText("");
            passWarningTxt.setText("");
        }
        /*int num = 5+2;
        String formatted = String.format("%03d", num);
        System.out.println(formatted);*/
    }//GEN-LAST:event_clearFormActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        AdminPage ap = new AdminPage();
        ap.setVisible(true);
        clearFields();
        this.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void firstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameFieldActionPerformed

    private void middleNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_middleNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_middleNameFieldActionPerformed

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameActionPerformed

    private void contactNoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactNoFieldKeyTyped
        // Character Restrictions only NUMBERS
        char c = evt.getKeyChar();
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
    }//GEN-LAST:event_contactNoFieldKeyTyped

    private void viewAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllBtnActionPerformed
        // TODO add your handling code here:
        ViewStaff vs = new ViewStaff();
        vs.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_viewAllBtnActionPerformed

    private void positionFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_positionFieldItemStateChanged
        // TODO add your handling code here:
        //System.out.println("i changed.");
    }//GEN-LAST:event_positionFieldItemStateChanged

    private void positionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionFieldActionPerformed
        // TODO add your handling code here:
        String currentSelected = positionField.getSelectedItem().toString();
        String posCode = "";
        
        if(currentSelected.equals("Cashier"))
        {
            posCode = "CS";
        } else if (currentSelected.equals("Manager"))
        {
            posCode = "MG";
        } else if (currentSelected.equals("Admin"))
        {
            posCode = "AD";
        }
        
        if(!editingMode){
            setStaffID(posCode); 
        }
    }//GEN-LAST:event_positionFieldActionPerformed

    private void editSelectedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSelectedBtnActionPerformed
        // TODO add your handling code here:
        
        editingMode = true;
        conEditBtn.setEnabled(true);
        editSelectedBtn.setEnabled(false);
        addStaffBtn.setEnabled(false);
        positionField.setEnabled(false);
        
        // Get the selected column from the table.
        int column = 0;
        int row = jTable1.getSelectedRow();
        String val = jTable1.getModel().getValueAt(row, column).toString();
        
        searchInDb(val);
        
    }//GEN-LAST:event_editSelectedBtnActionPerformed

    private void conEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conEditBtnActionPerformed
        // TODO add your handling code here:   
        if(!isFieldsEmpty()){
                
            if (String.valueOf(passField.getPassword()).equals(String.valueOf(conPassField.getPassword()))) {
                
                updateRecord(staffIdField.getText());
                Fetch();
                editingMode = false;
                conEditBtn.setEnabled(false);
                editSelectedBtn.setEnabled(true);
                addStaffBtn.setEnabled(true);
                positionField.setEnabled(true);
                clearFields();
                warningTxt.setText("");
                passWarningTxt.setText("");
            }
            else
            {
                passWarningTxt.setText("Password doesn't match.");
            }
            
        }else if(isFieldsEmpty())
        {
            warningTxt.setText("Make sure to fill all reuqired spaces.");
        }
        
    }//GEN-LAST:event_conEditBtnActionPerformed
    
    // END REGION
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // region Set the Look and Feel of the Project
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (UnsupportedLookAndFeelException e) {
            
        }
        // endregion
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accDetailsPanel;
    private javax.swing.JPanel accessOptionPane;
    private javax.swing.JButton addStaffBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton clearForm;
    private javax.swing.JButton conEditBtn;
    private javax.swing.JPasswordField conPassField;
    private javax.swing.JTextField contactNoField;
    private javax.swing.JButton editSelectedBtn;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JTextField middleNameField;
    private javax.swing.JLabel ovrvwTxt;
    private javax.swing.JLabel ovrvwTxt1;
    private javax.swing.JLabel ovrvwTxt2;
    private javax.swing.JLabel ovrvwTxt4;
    private javax.swing.JPasswordField passField;
    private javax.swing.JLabel passWarningTxt;
    private javax.swing.JPanel passengerDetailsPanel;
    private javax.swing.JComboBox<String> positionField;
    private javax.swing.JPanel rootPanel;
    private javax.swing.JTextField staffIdField;
    private javax.swing.JTextField userName;
    private javax.swing.JButton viewAllBtn;
    private javax.swing.JLabel warningTxt;
    // End of variables declaration//GEN-END:variables
}
